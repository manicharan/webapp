name: BuildTest

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build:
    name: Build Packer
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        continue-on-error: false

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
        continue-on-error: false

      - name: Set up MariaDB
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mariadb-server mariadb-client
        continue-on-error: false

      - name: Start and check MariaDB
        run: |
          sudo systemctl start mariadb
          sudo systemctl enable mariadb
          sudo systemctl status mariadb
        continue-on-error: false

      - name: Create User and Grant Access
        run: |
          sudo mysql -e "CREATE USER '${{ secrets.MARIADBUSERNAME}}'@'${{ secrets.MARIADBHOST}}' IDENTIFIED BY '${{ secrets.MARIADBPASSWORD}}';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.MARIADBUSERNAME}}'@'${{ secrets.MARIADBHOST}}' WITH GRANT OPTION;"
          sudo mysql -e "FLUSH PRIVILEGES;"
        continue-on-error: false

      - name: Build and Test
        env:
          DB_Host: ${{ secrets.MARIADBHOST}}
          DB_Port: ${{ secrets.MARIADBPORT}}
          DB_Database: ${{ secrets.MARIADBDATABASE}}
          DB_User: ${{ secrets.MARIADBUSERNAME}}
          DB_Password: ${{ secrets.MARIADBPASSWORD}}
        run: |
          mvn clean install
          pwd
          ls -al
          chmod +x ./mvnw
          ./mvnw clean install
          ./mvnw test
        continue-on-error: false

      - name: Set up Packer
        uses: hashicorp/setup-packer@main
        id: setup
        continue-on-error: false

      - name: Initialize packer
        run: packer init ./packer/.
        continue-on-error: false

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_AccessKey }}
          aws-secret-access-key: ${{ secrets.AWS_SecretAccessKey }}
          aws-region: us-east-1
        continue-on-error: false

      - name: Packer Build
        run: |
          export PKR_VAR_db_user=${{ secrets.MARIADBUSERNAME}}
          export PKR_VAR_db_password=${{ secrets.MARIADBPASSWORD}}
          export PKR_VAR_source_ami=${{ secrets.AMI}}
          packer build ./packer/debian-ami.pkr.hcl
        continue-on-error: false